(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{84:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return c}));var a=n(3),i=(n(0),n(104));const r={id:"what-is-mint-express",title:"Mint Express",sidebar_label:"Getting Started"},s={unversionedId:"backend/mint-express/what-is-mint-express",id:"backend/mint-express/what-is-mint-express",isDocsHomePage:!1,title:"Mint Express",description:"Mint Express is the boilerplate for Node/Express of a MERN stack. It holds the API code",source:"@site/docs\\backend\\mint-express\\getting-started.md",slug:"/backend/mint-express/what-is-mint-express",permalink:"/mint/docs/backend/mint-express/what-is-mint-express",editUrl:"https://github.com/antick/mint/edit/main/docs/docs/backend/mint-express/getting-started.md",version:"current",sidebar_label:"Getting Started",sidebar:"someSidebar",previous:{title:"Contributing",permalink:"/mint/docs/contributing"},next:{title:"Mint React",permalink:"/mint/docs/frontend/mint-react/what-is-mint-react"}},o=[{value:"Features",id:"features",children:[]},{value:"Getting Started",id:"getting-started",children:[{value:"Installation",id:"installation",children:[]},{value:"Commands",id:"commands",children:[]}]},{value:"Project Structure",id:"project-structure",children:[{value:"API Endpoints",id:"api-endpoints",children:[]}]},{value:"Logging",id:"logging",children:[{value:"Pagination",id:"pagination",children:[]}]},{value:"Logs",id:"logs",children:[]},{value:"Linting",id:"linting-1",children:[]}],l={toc:o};function c({components:e,...t}){return Object(i.b)("wrapper",Object(a.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Mint Express is the boilerplate for Node/Express of a MERN stack. It holds the API code\nfor all the frontend stacks built under the Mint Stack."),Object(i.b)("p",null,Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://img.shields.io/badge/version-0.1.0-teal.svg",alt:"version"}))," ",Object(i.b)("img",Object(a.a)({parentName:"p"},{src:"https://img.shields.io/badge/license-MIT-teal.svg",alt:"license"}))," ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://discord.gg/6jgSTR2pAF"}),Object(i.b)("img",Object(a.a)({parentName:"a"},{src:"https://img.shields.io/badge/chat-on%20discord-7289da.svg",alt:"Chat"})))," ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://coveralls.io/github/antick/mint-express?branch=master"}),Object(i.b)("img",Object(a.a)({parentName:"a"},{src:"https://coveralls.io/repos/github/antick/mint-express/badge.svg?branch=master",alt:"Coverage Status"})))," ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://codeclimate.com/github/antick/mint-express/maintainability"}),Object(i.b)("img",Object(a.a)({parentName:"a"},{src:"https://api.codeclimate.com/v1/badges/1f30292f51df0ab5ad22/maintainability",alt:"Maintainability"})))," ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://paypal.me/pankajsanam"}),Object(i.b)("img",Object(a.a)({parentName:"a"},{src:"https://img.shields.io/badge/support-paypal-yellowgreen.svg?style=flat-square",alt:"Support via Paypal"})))),Object(i.b)("p",{align:"center"},Object(i.b)("img",{alt:"Mint logo",src:"https://i.imgur.com/OuDAqB1.png",width:"200px"})),Object(i.b)("p",null,"A starter kit for building modular RESTful APIs using Node, Express, and Mongoose."),Object(i.b)("p",null,"Quickly start your project with all the essential features required to build a REST API."),Object(i.b)("h2",{id:"features"},"Features"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Advanced production process management and monitoring using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://pm2.keymetrics.io"}),"PM2")),Object(i.b)("li",{parentName:"ul"},"Authentication and authorization using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://www.passportjs.org"}),"passport")),Object(i.b)("li",{parentName:"ul"},"Centralized error handling"),Object(i.b)("li",{parentName:"ul"},"Code coverage using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://coveralls.io"}),"coveralls")),Object(i.b)("li",{parentName:"ul"},"Consistent editor configuration using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://editorconfig.org"}),"EditorConfig")),Object(i.b)("li",{parentName:"ul"},"Continuous integration with ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://travis-ci.org"}),"Travis CI")),Object(i.b)("li",{parentName:"ul"},"Cross-Origin Resource-Sharing (CORS) enabled using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/expressjs/cors"}),"cors")),Object(i.b)("li",{parentName:"ul"},"Docker support"),Object(i.b)("li",{parentName:"ul"},"Environment variables using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/motdotla/dotenv"}),"dotenv")," and ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/kentcdodds/cross-env#readme"}),"cross-env")),Object(i.b)("li",{parentName:"ul"},"Express + MongoDB (",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://mongoosejs.com/"}),"Mongoose"),")"),Object(i.b)("li",{parentName:"ul"},"Git hooks with ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/typicode/husky"}),"husky")," and ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/okonet/lint-staged"}),"lint-staged")),Object(i.b)("li",{parentName:"ul"},"Gzip compression with ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/expressjs/compression"}),"compression")),Object(i.b)("li",{parentName:"ul"},"Linting with ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"http://eslint.org"}),"eslint")," + Airbnb linting rules"),Object(i.b)("li",{parentName:"ul"},"Logging using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/winstonjs/winston"}),"winston")," and ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/expressjs/morgan"}),"morgan")),Object(i.b)("li",{parentName:"ul"},"Pagination plugin for mongoose"),Object(i.b)("li",{parentName:"ul"},"Request data validation using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/hapijs/joi"}),"Joi")),Object(i.b)("li",{parentName:"ul"},"Roles and permissions"),Object(i.b)("li",{parentName:"ul"},"Sanitize request data against xss and query injection"),Object(i.b)("li",{parentName:"ul"},"Set security HTTP headers using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://helmetjs.github.io"}),"helmet")),Object(i.b)("li",{parentName:"ul"},"Unit and integration tests using ",Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"https://jestjs.io"}),"Jest"))),Object(i.b)("h2",{id:"getting-started"},"Getting Started"),Object(i.b)("h3",{id:"installation"},"Installation"),Object(i.b)("p",null,"Clone the repo:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/antick/mint-express.git\ncd mint-express\nrm -rf .git\n")),Object(i.b)("p",null,"Install the dependencies:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm i\n")),Object(i.b)("p",null,"Create a config file for setting environment variables and auth tokens:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"cp .env.example .env\n")),Object(i.b)("h3",{id:"commands"},"Commands"),Object(i.b)("p",null,"Run this in your local development environment:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run start\n")),Object(i.b)("p",null,"Run this in production:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"npm run start:prod\n")),Object(i.b)("h4",{id:"testing"},"Testing"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"# run all tests\nnpm test\n\n# run all tests in watch mode\nnpm test:watch\n\n# run test coverage\nnpm run coverage\n")),Object(i.b)("h4",{id:"docker"},"Docker"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"# run docker container in development mode\nnpm run docker\n\n# run all tests in a docker container\nnpm run docker:test\n")),Object(i.b)("p",null,"Use below string if you want to connect MongoDB Compass with your docker mongo instance:"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"mongodb://host.docker.internal:21017/mint")),Object(i.b)("h4",{id:"linting"},"Linting"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"# run ESLint\nnpm run lint\n\n# fix ESLint errors\nnpm lint:fix\n")),Object(i.b)("h2",{id:"project-structure"},"Project Structure"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"src\\\n  |--config\\             # Global environment variables and configurations\n    |--user\\             # User module\n      |--config\\         # User module configuration\n      |--controllers\\    # User module controllers\n      |--middlewares\\    # User module middlewares\n      |--models\\         # Mongoose models for User module\n      |--routes\\         # Routes for user module\n      |--services\\       # Business logic for user module\n      |--tests\\          # User module specific tests\n      |--validations\\    # Request data validation schemas for user module\n   |--utils\\             # Common utility classes and functions\n     |--db\\              # Common database specific utils\n       |--plugins\\       # Mongoose plugins\n     |--errors\\          # Common error classes\n     |--test\\            # Tests for utils\n   |--app.js             # Express app\n   |--index.js           # App entry point\n   |--router.js          # Entry point for all module routes\n")),Object(i.b)("h3",{id:"api-endpoints"},"API Endpoints"),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://app.getpostman.com/run-collection/534e51edc60565c7a7f6"}),Object(i.b)("img",Object(a.a)({parentName:"a"},{src:"https://run.pstmn.io/button.svg",alt:"Run in Postman"})))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Auth routes"),":\\\n",Object(i.b)("inlineCode",{parentName:"p"},"POST /api/auth/register")," - register\\\n",Object(i.b)("inlineCode",{parentName:"p"},"POST /api/auth/login")," - login\\\n",Object(i.b)("inlineCode",{parentName:"p"},"POST /api/auth/refresh-tokens")," - refresh auth tokens\\\n",Object(i.b)("inlineCode",{parentName:"p"},"POST /api/auth/forgot-password")," - send reset password email\\\n",Object(i.b)("inlineCode",{parentName:"p"},"POST /api/auth/reset-password")," - reset password"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"User routes"),":\\\n",Object(i.b)("inlineCode",{parentName:"p"},"POST /api/user")," - create a user\\\n",Object(i.b)("inlineCode",{parentName:"p"},"GET /api/user")," - get all users (paginated) \\\n",Object(i.b)("inlineCode",{parentName:"p"},"GET /api/user/:userId")," - get a specific user\\\n",Object(i.b)("inlineCode",{parentName:"p"},"PATCH /api/user/:userId")," - update a user\\\n",Object(i.b)("inlineCode",{parentName:"p"},"DELETE /api/user/:userId")," - delete a user"),Object(i.b)("h2",{id:"logging"},"Logging"),Object(i.b)("p",null,"Import the logger from ",Object(i.b)("inlineCode",{parentName:"p"},"src/utils/logger.js"),". It is using the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/winstonjs/winston"}),"Winston")," logging library."),Object(i.b)("p",null,"Logging should be done according to the following severity levels (ascending\norder from most important to least important):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const logger = require('<path to src>/utils/logger');\n\nlogger.error('message'); // level 0\nlogger.warn('message'); // level 1\nlogger.info('message'); // level 2\nlogger.http('message'); // level 3\nlogger.verbose('message'); // level 4\nlogger.debug('message'); // level 5\n")),Object(i.b)("p",null,"In development mode, log messages of all severity levels will be printed to the console."),Object(i.b)("p",null,"In production mode, only ",Object(i.b)("inlineCode",{parentName:"p"},"info"),", ",Object(i.b)("inlineCode",{parentName:"p"},"warn"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"error")," logs will be printed to the console.\\"),Object(i.b)("p",null,"API request information (request url, response code, timestamp, etc.) are also automatically logged (using ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/expressjs/morgan"}),"morgan"),")."),Object(i.b)("h3",{id:"pagination"},"Pagination"),Object(i.b)("p",null,"The paginate plugin adds the ",Object(i.b)("inlineCode",{parentName:"p"},"paginate")," static method to the mongoose schema."),Object(i.b)("p",null,"Adding this plugin to the ",Object(i.b)("inlineCode",{parentName:"p"},"User")," model schema will allow you to do the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const queryUsers = async (filter, options) => User.paginate(filter, options);\n")),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"filter")," param is a regular mongo filter."),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"options")," param can have the following (optional) fields:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const options = {\n  sortBy: 'name:desc',\n  limit: 5,\n  page: 2,\n};\n")),Object(i.b)("h2",{id:"logs"},"Logs"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"pm2 logs\n")),Object(i.b)("h2",{id:"linting-1"},"Linting"),Object(i.b)("p",null,"Linting is done using ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://eslint.org/"}),"ESLint")),Object(i.b)("p",null,"In this app, ESLint is configured to follow the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb-base"}),"Airbnb JavaScript style guide")," with some modifications."),Object(i.b)("p",null,"To modify the ESLint configuration, update the ",Object(i.b)("inlineCode",{parentName:"p"},".eslintrc.json")," file."),Object(i.b)("p",null,"To prevent a certain file or directory from being linted, add it to ",Object(i.b)("inlineCode",{parentName:"p"},".eslintignore"),"."),Object(i.b)("p",null,"To maintain a consistent coding style across different IDEs, the project contains ",Object(i.b)("inlineCode",{parentName:"p"},".editorconfig")))}c.isMDXComponent=!0}}]);